#!/bin/bash
set -e
set -o pipefail

# Bu script, Docker Compose için son .env dosyasını oluşturur.
# İki aşamalı bir "derleyici" gibi çalışarak tüm değişkenleri çözer,
# okunabilirlik için kaynak yorumlarını korur ve ortam kirliliğini önler.

PROFILE=${1:-dev}

# --- Temel Dizinleri Tanımla ---
SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
INFRA_DIR=$(dirname "$SCRIPT_DIR")
WORKSPACE_DIR=$(dirname "$INFRA_DIR")

# --- Kaynak ve Hedef Dosyaları Tanımla ---
CONFIG_DIR="${WORKSPACE_DIR}/sentiric-config/environments"
OUTPUT_FILE="${INFRA_DIR}/.env.generated"
PROFILE_FILE="${CONFIG_DIR}/profiles/${PROFILE}.env"
TEMP_ENV_FILE=$(mktemp)

trap 'rm -f "$TEMP_ENV_FILE"' EXIT

if [ ! -f "$PROFILE_FILE" ]; then
    echo "❌ HATA: Profil dosyası bulunamadı: $PROFILE_FILE"
    exit 1
fi

echo "🔧 Yapılandırma dosyası '${OUTPUT_FILE}' oluşturuluyor (Profil: ${PROFILE})..."

# --- AŞAMA 1: Tüm .env parçalarını geçici dosyada topla ---
while IFS= read -r line || [[ -n "$line" ]]; do
    line=$(echo "$line" | tr -d '\r')
    if [[ $line == source* ]]; then
        relative_path=$(echo "$line" | cut -d' ' -f2)
        source_file="${CONFIG_DIR}/${relative_path}"
        if [ -f "$source_file" ]; then
            # DÜZELTME: Yorum başlığını ve içeriği ayrı ayrı ekle
            echo "### Included from: ${relative_path} ###" >> "$TEMP_ENV_FILE"
            (cat "$source_file" | tr -d '\r' | grep -vE '^\s*#' || true) >> "$TEMP_ENV_FILE"
            echo "" >> "$TEMP_ENV_FILE"
        fi
    fi
done < "$PROFILE_FILE"

SECRETS_FILE="${CONFIG_DIR}/common/secrets.env"
if [ -f "$SECRETS_FILE" ]; then
    echo "### Included from: common/secrets.env ###" >> "$TEMP_ENV_FILE"
    (cat "$SECRETS_FILE" | tr -d '\r' | grep -vE '^\s*#|^\s*$' || true) >> "$TEMP_ENV_FILE"
fi

# --- AŞAMA 2: Değişkenleri çöz ve nihai dosyayı yaz ---
{
    echo "# Auto-generated by Sentiric Orchestrator for profile: ${PROFILE}"
    echo "# DO NOT EDIT THIS FILE MANUALLY"
    echo ""
    
    # Geçici dosyayı oku ve değişkenleri çözerek yazdır
    # Bu, `${...}` genişletmelerini yapar ve yorumları korur.
    env -i bash -c "set -a; source '$TEMP_ENV_FILE'; env" | grep -E '^[A-Z_][A-Z0-9_]*=' | grep -vE '^(_|PWD|SHLVL)='
    
    echo ""
    echo "# Dynamically added by Orchestrator"
    DETECTED_IP=$(hostname -I | awk '{print $1}' || echo "127.0.0.1")
    echo "PUBLIC_IP=${DETECTED_IP}"
    echo "TAG=${TAG:-latest}"
    echo "CONFIG_REPO_PATH=../sentiric-config"

} > "$OUTPUT_FILE"

echo "✅ Yapılandırma başarıyla oluşturuldu."