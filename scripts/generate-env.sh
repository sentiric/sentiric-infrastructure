#!/bin/bash

# Hata ayıklama modunu aç: Her komutu çalıştırmadan önce yazdır.
set -x 
# Herhangi bir komut hata verirse script'i durdur.
set -e
# Pipe içindeki bir komut hata verirse tüm pipe'ı başarısız say.
set -o pipefail

PROFILE=${1:-dev}

echo "--- Script Başladı: generate-env.sh ---"
echo "Profil: ${PROFILE}"

# --- Temel Dizinleri Tanımla ---
echo "Adım 1: Dizin yolları hesaplanıyor..."
SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
INFRA_DIR=$(dirname "$SCRIPT_DIR")
WORKSPACE_DIR=$(dirname "$INFRA_DIR")
echo "-> Çalışma Alanı: ${WORKSPACE_DIR}"
echo "-> Altyapı Dizini: ${INFRA_DIR}"
echo "-> Config Dizini: ${WORKSPACE_DIR}/sentiric-config/environments"

# --- Kaynak ve Hedef Dosyaları Tanımla ---
CONFIG_DIR="${WORKSPACE_DIR}/sentiric-config/environments"
OUTPUT_FILE="${INFRA_DIR}/.env.generated"
PROFILE_FILE="${CONFIG_DIR}/profiles/${PROFILE}.env"

if [ ! -f "$PROFILE_FILE" ]; then
    echo "❌ HATA: Profil dosyası bulunamadı: $PROFILE_FILE"
    exit 1
fi
echo "Adım 2: Profil dosyası bulundu: ${PROFILE_FILE}"

echo "🔧 Yapılandırma dosyası '${OUTPUT_FILE}' oluşturuluyor..."

# --- Çıktı Dosyasını Başlat ---
> "$OUTPUT_FILE"
{
    echo "# Auto-generated by Sentiric Orchestrator for profile: ${PROFILE}"
    echo "# DO NOT EDIT THIS FILE MANUALLY"
    echo ""
} >> "$OUTPUT_FILE"
echo "Adım 3: Çıktı dosyası başlatıldı: ${OUTPUT_FILE}"

# --- Dosyaları Birleştir ---
echo "Adım 4: Profildeki kaynak dosyaları birleştiriliyor..."
# Profil dosyasını satır satır oku
while IFS= read -r line || [[ -n "$line" ]]; do
    line_clean=$(echo "$line" | tr -d '\r') # Satır sonu karakterini temizle

    if [[ $line_clean == source* ]]; then
        relative_path=$(echo "$line_clean" | cut -d' ' -f2)
        source_file="${CONFIG_DIR}/${relative_path}"
        
        if [ -f "$source_file" ]; then
            echo "  -> İşleniyor: ${source_file}"
            {
                echo "# Included from: ${relative_path}"
                # Kaynak dosyayı da okurken satır sonlarını temizle
                grep -vE '^\s*#|^\s*$' "$source_file" | tr -d '\r'
                echo ""
            } >> "$OUTPUT_FILE"
        else
            echo "⚠️ UYARI: Kaynak dosyası bulunamadı, atlanıyor: $source_file"
        fi
    fi
done < "$PROFILE_FILE"
echo "Adım 4 tamamlandı."

# --- Sırları ve Dinamik Değişkenleri Ekle ---
echo "Adım 5: Sırlar ve dinamik değişkenler ekleniyor..."
SECRETS_FILE="${CONFIG_DIR}/common/secrets.env"
if [ -f "$SECRETS_FILE" ]; then
    echo "  -> Sırlar ekleniyor..."
    {
        echo "# Included from: common/secrets.env"
        grep -vE '^\s*#|^\s*$' "$SECRETS_FILE" | tr -d '\r'
        echo ""
    } >> "$OUTPUT_FILE"
fi

echo "# Dynamically added by Orchestrator" >> "$OUTPUT_FILE"
# WSL'de 'ip' komutu yoksa hata vermemesi için kontrol ekliyoruz
DETECTED_IP="127.0.0.1" # Varsayılan değer
if command -v ip &> /dev/null; then
    DETECTED_IP=$(ip addr | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | cut -d'/' -f1 | head -n 1)
fi
echo "PUBLIC_IP=${DETECTED_IP}" >> "$OUTPUT_FILE"
TAG=${TAG:-latest}
echo "TAG=${TAG}" >> "$OUTPUT_FILE"
echo "CONFIG_REPO_PATH=../sentiric-config" >> "$OUTPUT_FILE"
echo "Adım 5 tamamlandı."

echo "✅ Yapılandırma başarıyla oluşturuldu."
echo "--- Script Bitti: generate-env.sh ---"